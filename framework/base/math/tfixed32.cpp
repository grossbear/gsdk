////////////////////////////////////////////////////////////////////////////////
//  tfixed32.cpp
//
//  Math 32-bit fixed data type class with 16-bit fraction part
//
//
////////////////////////////////////////////////////////////////////////////////

#include "tfixed32.h"


////////////////////////////////////////////////////////////////////////////////
// Constructors
////////////////////////////////////////////////////////////////////////////////
tfixed32::tfixed32():value(0){}
////////////////////////////////////////////////////////////////////////////////
tfixed32::tfixed32(const tfixed32 & fx_val):value(fx_val.value){}
////////////////////////////////////////////////////////////////////////////////
tfixed32::tfixed32(const float f_val)
{
    value = (int32t)(f_val * (float)one);
}
////////////////////////////////////////////////////////////////////////////////
tfixed32::tfixed32(const double d_val)
{
    value = (int32t)(d_val * (double)one);
}
////////////////////////////////////////////////////////////////////////////////
tfixed32::tfixed32(const int32t i_val)
{
    value = i_val << bits;
}

////////////////////////////////////////////////////////////////////////////////
//Cast To Pointer int32t *
////////////////////////////////////////////////////////////////////////////////
tfixed32::operator int32t * () const
{
    return (int32t*) this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32::operator const int32t * () const
{
    return (const int32t*) this;
}

////////////////////////////////////////////////////////////////////////////////
//Cast To Primitive Build-in Types
////////////////////////////////////////////////////////////////////////////////
tfixed32::operator float() const
{
    return (float)value / (float)one;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32::operator double() const
{
    return (double)value / (double)one;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32::operator int32t() const
{
    return value >> bits;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32::operator bool() const
{
    return value != 0;
}

////////////////////////////////////////////////////////////////////////////////
// Assignment Operators
////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator = (const tfixed32 & fx_val)
{
    value = fx_val.value;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator += (const tfixed32 & fx_val)
{
    value += fx_val.value;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator -= (const tfixed32 & fx_val)
{
    value -= fx_val.value;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator *= (const tfixed32 & fx_val)
{
    //v = (long)(((long long)v * (long long)f.v + half) >> bits);
    value = (int32t)(((int64t)value * (int64t)fx_val.value + half) >> bits);
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator /= (const tfixed32 & fx_val)
{
    //v = (long)(((long long)v << bits) / (long long)f.v);
    value = (int32t)(((int64t)value << bits) / (int64t)fx_val.value);
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator >>= (int32t i)
{
    value >>= i;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator <<= (int32t i)
{
    value <<= i;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator &= (int32t mask)
{
    value &= mask;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator |= (int32t mask)
{
    value |= mask;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 & tfixed32::operator ^= (int32t mask)
{
    value ^= mask;
    return *this;
}

////////////////////////////////////////////////////////////////////////////////
// Unary Operators
////////////////////////////////////////////////////////////////////////////////

tfixed32 tfixed32::operator + () const
{
    tfixed32 out;
    out.value = value;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator - () const
{
    tfixed32 out;
    out.value = -value;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
// Binary Operators
////////////////////////////////////////////////////////////////////////////////

tfixed32 tfixed32::operator + (const tfixed32 & fx_val) const
{
    tfixed32 out;
    out.value = value + fx_val.value;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator - (const tfixed32 & fx_val) const
{
    tfixed32 out;
    out.value = value - fx_val.value;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator * (const tfixed32 & fx_val) const
{
    tfixed32 out;
    out.value = (int32t)(((int64t)value * (int64t)fx_val.value + half) >> bits);
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator / (const tfixed32 & fx_val) const
{
    tfixed32 out;
    out.value = (int32t)(((int64t)value << bits) / (int64t)fx_val.value);
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator >> (int32t i) const
{
    tfixed32 out;
    out.value = value >> i;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator << (int32t i) const
{
    tfixed32 out;
    out.value = value << i;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator & (int32t mask) const
{
    tfixed32 out;
    out.value = value & mask;
    return out;

}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator | (int32t mask) const
{
    tfixed32 out;
    out.value = value | mask;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
tfixed32 tfixed32::operator ^ (int32t mask) const
{
    tfixed32 out;
    out.value = value ^ mask;
    return out;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator == (const tfixed32 & fx_val) const
{
    return value == fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator != (const tfixed32 & fx_val) const
{
    return value != fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator <  (const tfixed32 & fx_val) const
{
    return value < fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator >  (const tfixed32 & fx_val) const
{
    return value > fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator <= (const tfixed32 & fx_val) const
{
    return value <= fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator >= (const tfixed32 & fx_val) const
{
    return value >= fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator && (const tfixed32 & fx_val) const
{
    return value && fx_val.value;
}

////////////////////////////////////////////////////////////////////////////////
bool tfixed32::operator || (const tfixed32 & fx_val) const
{
    return value || fx_val.value;
}
////////////////////////////////////////////////////////////////////////////////
